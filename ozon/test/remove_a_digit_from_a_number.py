"""
Условие задачи
--------------------------------
Андрей прошел собеседование на позицию разработчика в известном маркетплейсе.
И теперь его спросили какую зарплату он бы себе хотел.
Андрей, недолго думая, написал на листочке число — случайный набор цифр,
который пришел ему в голову, ведь он знает, чем больше цифр — тем больше число.
В такой зарплате Андрею, к сожалению, отказали.
Но его согласились принять на работу при условии, что он сотрет ровно одну цифру из своего числа.

Андрей очень хочет работать в этом маркетплейсе, но также и не хочет много терять в своей зарплате,
поэтому просит вас убрать в его числе одну цифру так,
чтобы число осталось как можно больше.
Обратите внимание, что если изначальное число содержит всего одну цифру,
то убрав ее, Андрей получит число 0.


Входные данные
--------------------------------
Каждый тест состоит из нескольких наборов входных данных.

Первая строка содержит целое число t(1 <= t <= 10^5) — количество наборов входных данных.
Каждый набор тестовых данных содержит одно целое число s — зарплата, указанная Андреем.

Гарантируется, что число не содержит ведущих нулей, а также сумма количества цифр по всем тестам не превосходит 10^5


Выходные данные
--------------------------------
Для каждого набора входных данных выведите наибольшую зарплату, которую может получить Андрей.


Пример 1
--------------------------------
Входные данные:
1
200000

Выходные данные:
20000

Пример 2
--------------------------------
Входные данные:
3
9
0
9123

Выходные данные:
0
0
923
"""

import sys


def fast_input():
    return sys.stdin.readline().rstrip("\r\n")


def fast_output(x):
    sys.stdout.write(str(x) + '\n')


result_output = []
count_of_salary = int(fast_input())
for _ in range(count_of_salary):
    salary = int(fast_input())
    if salary // 10 == 0:
        result_output.append(0)
        continue

    findest = False
    salary_like_str = str(salary)

    for idx in range(0, len(salary_like_str) - 1):
        if int(salary_like_str[idx]) <= int(salary_like_str[idx+1]):
            result_str = salary_like_str[0:idx] + salary_like_str[idx+1:]
            findest = True
            break

    if findest:
        result_output.append(int(result_str))
    else:
        result_str = salary_like_str[:-1]
        result_output.append(int(result_str))

for i in result_output:
    fast_output(i)
